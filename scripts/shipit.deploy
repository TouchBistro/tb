#!/bin/bash

export AWS_DEFAULT_REGION=us-east-1 # lazy
export CARD_IMAGE="https://png.pngtree.com/svg/20170406/icon_failed__1325447.png"
export ICON="‚ùå"

. scripts/notif.sh

#todo: just start using this directly once shipit is upgraded
export GITHUB_REPO_NAME=$1

if [ $# -lt 2 ]; then
  echo "Incorrect arguments supplied - need projectname, operation, and optional webhookurl"
fi

if [ $2 = "deploy" ]; then
  export DEPLOY_MESSAGE="Deployment failed for $GITHUB_REPO_NAME, see shipit for more info."
fi

if [ $2 = "rollback" ]; then
  export DEPLOY_MESSAGE="Rollback failed for $GITHUB_REPO_NAME, see shipit for more info."
fi

fail_notif() {
	# test if $3 is set to a webhook url
	if !([ -z ${3+x} ]); then
		curl --write-out '%{http_code}' --silent --output /dev/null --header "Content-Type: application/json" --request POST --data "$(generate_slack_post_data)" $3
	fi
	curl --write-out '%{http_code}' --silent --output /dev/null --header "Content-Type: application/json" --request POST --data "$(generate_slack_post_data)" $SLACK_WEBHOOK_URL
	exit 1
}

CURR_GIT_TAG=$(git describe --tags --abbrev=0)

CURR_MAJOR=$(echo "$CURR_GIT_TAG" | awk -F'.' '{print $1}')
CURR_MINOR=$(echo "$CURR_GIT_TAG" | awk -F'.' '{print $2}')
CURR_PATCH=$(echo "$CURR_GIT_TAG" | awk -F'.' '{print $3}')

echo "Current tag: $CURR_GIT_TAG"
echo "Creating new $RELEASE_TYPE release"

if [[ $RELEASE_TYPE = "major" ]]; then
  NEW_GIT_TAG="$((CURR_MAJOR+1)).0.0"
fi

if [[ $RELEASE_TYPE = "minor" ]]; then
  NEW_GIT_TAG="$CURR_MAJOR.$((CURR_MINOR+1)).0"
fi

if [[ $RELEASE_TYPE = "patch" ]]; then
  NEW_GIT_TAG="$CURR_MAJOR.$CURR_MINOR.$((CURR_PATCH+1))"
fi

echo "Pushing new tag: $NEW_GIT_TAG"
git tag -a "$NEW_GIT_TAG" -m "$NEW_GIT_TAG"
git push origin "$NEW_GIT_TAG"
echo "Successfully pushed tag: $NEW_GIT_TAG"

/usr/local/lib/goreleaser/goreleaser release || fail_notif
