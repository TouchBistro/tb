version: '3.7'

x-json-logger-config:
  &json-logger-config
  LOGGER_CONFIG_JSON: >
    {
      "transports": {
        "devConsole": {
          "provider": "winston.transports.Console",
          "config": {
            "colorize": true,
            "timestamp": true,
            "json": false
          }
        }
      },
      "env": {
        "development": {
          "rules": [
            {
              "pattern": "*",
              "binding": {
                "transport": ["devConsole"],
                "level": "info"
              }
            }
          ]
        }
      }
    }

x-mssqlconnect:
  &mssql-connect
  DB_HOST: legacy-database-ecr
  DB_PORT: 1433
  DB_USER: SA
  DB_PASSWORD: Password123
  DB_DISABLE_SSL: "true"

x-legacy-bridge-manage-service-boilerplate:
  &legacy-bridge-manage-service-boilerplate
  entrypoint: [ "bash", "./docker-entrypoint.sh" ]
  env_file:
    - ./legacy-bridge-manage-service/.env.example
  environment:
    << : *mssql-connect
    DB_NAME: cloud_db
    << : *json-logger-config
  ports:
    - "8999:8080"
  depends_on:
    - legacy-database-ecr

x-legacy-bridge-cloud-service-boilerplate:
  &legacy-bridge-cloud-service-boilerplate
  entrypoint: [ "bash", "./docker-entrypoint.sh" ]
  env_file:
    - ./legacy-bridge-cloud-service/.env.example
  environment:
    << : *mssql-connect
    HTTP_PORT: 8080
    << : *json-logger-config
    DB_NAME: cloud_db
  ports:
    - "8101:8080"
  depends_on:
    - legacy-database-ecr

services:
  dotnet-manage:
    image: hpgy/mono-xsp4
    container_name: core-devtools_dotnet-manage_container
    ports:
      - "9000:80"
    volumes:
      - ./dotnet-depot/manage:/app:delegated
    environment:
      MONO_OPTIONS: --debug
    entrypoint:
      [ "xsp4","--port","80","--nonstop", "--verbose", "--printlog", "--loglevels", "All" ]
    depends_on:
      - legacy-database-ecr

  dotnet-api:
    image: hpgy/mono-xsp4
    container_name: core-devtools_dotnet-api_container
    ports:
      - "9001:80"
    volumes:
      - ./dotnet-depot/api:/app:delegated
    environment:
      MONO_OPTIONS: --debug
    entrypoint:
      [ "xsp4","--port","80","--nonstop", "--verbose", "--printlog", "--loglevels", "All" ]
    depends_on:
      - legacy-database-ecr

  legacy-bridge-manage-service:
    << : *legacy-bridge-manage-service-boilerplate
    build:
      target: dev
      context: ./legacy-bridge-manage-service
      args:
        - NPM_TOKEN=$NPM_TOKEN
        - GITSHA=TESTME
    image: core-devtools_legacy-bridge-manage-service
    container_name: core-devtools_legacy-bridge-manage-service_container
    command: bash -c 'if [ "$START_SERVER" = "true" ]; then yarn start; else tail -f /dev/null; fi'

  legacy-bridge-manage-service-ecr:
    << : *legacy-bridge-manage-service-boilerplate
    image: 651264383976.dkr.ecr.us-east-1.amazonaws.com/bridge-manage-service:develop
    container_name: core-devtools_legacy-bridge-manage-service-ecr_container
    command: bash -c 'if [ "$START_SERVER" = "true" ]; then yarn serve; else tail -f /dev/null; fi'

  legacy-bridge-cloud-service:
    << : *legacy-bridge-cloud-service-boilerplate
    build:
      target: dev
      context: ./legacy-bridge-cloud-service
      args:
        - NODE_ENV=development
        - NPM_TOKEN=$NPM_TOKEN
    image: core-devtools_legacy-bridge-cloud-service
    command: bash -c 'if [ "$START_SERVER" = "true" ]; then yarn start; else tail -f /dev/null; fi'
    container_name: core-devtools_legacy-bridge-cloud-service_container
    volumes:
      - ./legacy-bridge-cloud-service:/home/node/app:delegated
      - legacy-bridge-cloud-service-node_modules:/home/node/app/node_modules

  legacy-bridge-cloud-service-ecr:
    << : *legacy-bridge-cloud-service-boilerplate
    image: 651264383976.dkr.ecr.us-east-1.amazonaws.com/bridge-cloud-service:develop
    container_name: core-devtools_legacy-bridge-cloud-service-ecr_container
    command: bash -c 'if [ "$START_SERVER" = "true" ]; then yarn serve; else tail -f /dev/null; fi'

volumes:
  legacy-bridge-cloud-service-node_modules:
